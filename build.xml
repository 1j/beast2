<!-- Build BEAST 2. It is also used by Hudson BEAST_2 project. JUnit test is available for this build. -->
<project basedir="." default="build_jar_all_BEAST" name="BUILD_BEAST_2">
	<description>
	    Build BEAST 2. 
            Also used by Hudson BEAST_2 project. 
	    JUnit test is available for this build.
	    $Id: build_BEAST_2.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="lib" location="lib" />
	<property name="doc" location="doc" />
	<property name="dist" location="${build}/dist" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report"  value="${build}/junitreport"/>

	<path id="classpath">
		<fileset dir="${lib}" includes="**/*.jar"/>
	</path>

	<!-- start -->
	<target name="init">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>

	<target name="clean">
		<delete dir="${build}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_BEAST" depends="clean,compile-all,junit"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_BEAST" depends="clean,compile-all,junit,dist_all_BEAST"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_BEAST_NoJUnitTest" depends="clean,compile-all,dist_all_BEAST"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-all" depends="init">
        <echo>Building BEAST 2</echo>
		<mkdir dir="${build}" />

		<!-- Compile the java code from ${src} into ${build} /bin -->
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m">
			<include name="beast/**/**" />
            <!-- apache commons math -->
			<include name="org/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/beast/**" />
		</javac>
        <copy todir="${build}">
            <fileset dir="${src}" includes="**/*.properties"/>
            <fileset dir="${src}" includes="**/*.png"/>
        </copy>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the beast.jar and beauti.jar -->
	<target name="dist_all_BEAST" depends="compile-all" description="create BEAST jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />

		<!-- Put everything in ${build} into the beast.jar file -->
		<jar jarfile="${dist}/beast.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEAST}" />
			</manifest>
			<fileset dir="${build}">
				<include name="beast/**/*.class" />
				<include name="beast/**/*.properties" />
				<include name="beast/**/*.png" />
				<include name="beagle/**/*.class" />
				<include name="org/**/*.class" />
			</fileset>
		</jar>
		<jar jarfile="${dist}/beast.src.jar">
			<fileset dir="${src}">
				<include name="beast/**/*.java" />
				<include name="beast/**/*.png" />
				<include name="beast/**/*.xsl" />
			</fileset>
        </jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_BEAST">
		<java jar="${dist}/beast.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junit">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${build}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${src}">
                    <include name="test/**/*Test.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>

    <target name="javadoc" description="Create Javadocs for Beast II" depends='docPreProcess'>
        <mkdir dir="beast2/javadoc/"/>
        <javadoc 
            destdir="beast2/javadoc/">
            <fileset dir="src2/" includes="beast/core/**/*.java" />
            <fileset dir="src2/" includes="beast/util/**/*.java" />
            <fileset dir="src2/" includes="beast/math/**/*.java" />
            <fileset dir="src2/" includes="beast/evolution/**/*.java" />
        </javadoc>
    </target>

    <!-- run perl script that extracts @Description and Input.description info for javadoc -->
    <target name="docPreProcess">
        <exec executable="perl" dir="${basedir}">
            <arg value="scripts/doc.pl"/>
        </exec>
    </target>


    <!-- zip up everything that goes in the SDK -->
    <target name="sdk" description="Create Beast II SDK" depends="dist_all_BEAST,javadoc">
		<!-- Put the SDK in ${dist} into the beastsdk.zip file -->
        <copy file="doc/README" tofile="beast2/README"/>
        <copy file="doc/LICENSE" tofile="beast2/LICENSE"/>
        <copy file="doc/slides/sdk.pdf" tofile="beast2/Beast.II.Getting.Started.pdf"/>
        <copy file="${dist}/beast.jar" tofile="beast2/beast.jar"/>
        <delete file="${dist}/beastsdk.zip"/> 

		<jar jarfile="${dist}/beastsdk.zip">
			<fileset dir="">
				<include name="beast2/README" />
				<include name="beast2/LICENSE" />
				<include name="beast2/Beast.II.Getting.Started.pdf" />
				<include name="beast2/javadoc/**/*.*" />
				<include name="beast2/beast.jar" />
			</fileset>
		</jar>

        <!-- clean up -->
        <delete file="beast2/README"/> 
        <delete file="beast2/LICENSE"/> 
        <delete file="beast2/beast.jar"/> 
        <delete includeemptydirs="true">
            <fileset dir="beast2/javadoc/" includes="**/*"/>
        </delete>
        <delete dir="beast2/javadoc"/> 
        <delete dir="beast2"/> 
    </target>

</project>

