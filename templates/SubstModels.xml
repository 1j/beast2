<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

<mergewith point='commonTemplates'>

<!-- substitution models -->
<!-- JC69 substitution model -->
        <subtemplate id='JC69' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.JukesCantor' mainid='JC69.$(n)'>
<![CDATA[
        <plugin spec='JukesCantor' id='JC69.$(n)'/>
]]>
        </subtemplate>

<!-- HKY substitution model -->
        <subtemplate id='HKY' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.HKY' mainid='hky.$(n)'>
<![CDATA[
        <plugin spec='HKY' id='hky.$(n)'>
            <parameter id="kappa.$(n)" name='kappa' value="1.0" lower="0.0" estimate='true'/>
            <frequencies id='freqs.$(n)' spec='Frequencies'>
                <frequencies id='freqParameter.$(n)' spec='parameter.RealParameter' dimension='4' value='0.25'/>
            </frequencies>
        </plugin>

        <plugin id='KappaScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@kappa.$(n)"/>
        <plugin id='FrequenciesExchanger.$(n)' spec='DeltaExchangeOperator' delta="0.01" weight="0.1" parameter="@freqParameter.$(n)"/>

        <plugin id='KappaPrior.$(n)' spec='Prior' x='@kappa.$(n)'>
            <distr spec="OneOnX"/>
        </plugin>

]]>
            <connect spec='BeautiConnector' srcID='KappaScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='FrequenciesExchanger.$(n)' targetID='mcmc' inputName='operator'/>

            <connect spec='BeautiConnector' srcID='KappaPrior.$(n)' targetID='prior' inputName='distribution'/>
        </subtemplate>

<!-- GTR substitution model -->
        <subtemplate id='GTR' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.HKY' mainid='gtr.$(n)'>
<![CDATA[
        <plugin spec='GTR' id='gtr.$(n)'>
            <parameter id="rateAC.$(n)" name='rateAC' value="1.0" lower="0.0" estimate='true'/>
            <parameter id="rateAG.$(n)" name='rateAG' value="1.0" lower="0.0" estimate='true'/>
            <parameter id="rateAT.$(n)" name='rateAT' value="1.0" lower="0.0" estimate='true'/>
            <parameter id="rateCG.$(n)" name='rateCG' value="1.0" lower="0.0" estimate='true'/>
            <parameter id="rateCT.$(n)" name='rateCT' value="1.0" lower="0.0" estimate='true'/>
            <parameter id="rateGT.$(n)" name='rateGT' value="1.0" lower="0.0" estimate='false'/>
            <frequencies id='freqs.$(n)' spec='Frequencies'>
                <frequencies id='freqParameter.$(n)' spec='parameter.RealParameter' dimension='4' value='0.25'/>
            </frequencies>
        </plugin>

        <operator id='RateACScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@rateAC.$(n)"/>
        <operator id='RateAGScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@rateAG.$(n)"/>
        <operator id='RateATScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@rateAT.$(n)"/>
        <operator id='RateCGCScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@rateCG.$(n)"/>
        <operator id='RateCTCScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@rateCT.$(n)"/>
        <operator id='RateGTCScaler.$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@rateGT.$(n)"/>
        <operator id='FrequenciesExchanger.$(n)' spec='DeltaExchangeOperator' delta="0.01" weight="0.1" parameter="@freqParameter.$(n)"/>

        <prior id='RateACPrior.$(n)' spec='Prior' x='@rateAC.$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/></prior>
        <prior id='RateAGPrior.$(n)' spec='Prior' x='@rateAG.$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/></prior>
        <prior id='RateATPrior.$(n)' spec='Prior' x='@rateAT.$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/></prior>
        <prior id='RateCGPrior.$(n)' spec='Prior' x='@rateCG.$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/></prior>
        <prior id='RateCTPrior.$(n)' spec='Prior' x='@rateCT.$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/></prior>
        <prior id='RateGTPrior.$(n)' spec='Prior' x='@rateGT.$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/></prior>
]]>
            <connect spec='BeautiConnector' srcID='FrequenciesExchanger.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='RateACScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='RateAGScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='RateATScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='RateCGScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='RateCTScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='RateGTScaler.$(n)' targetID='mcmc' inputName='operator'/>

            <connect spec='BeautiConnector' srcID='freqParameter.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateAC.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateAG.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateAT.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateCG.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateCT.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateGT.$(n)' targetID='tracelog' inputName='log'/>

            <connect spec='BeautiConnector' srcID='RateACPrior.$(n)' targetID='prior' inputName='distribution'/>
            <connect spec='BeautiConnector' srcID='RateAGPrior.$(n)' targetID='prior' inputName='distribution'/>
            <connect spec='BeautiConnector' srcID='RateATPrior.$(n)' targetID='prior' inputName='distribution'/>
            <connect spec='BeautiConnector' srcID='RateCGPrior.$(n)' targetID='prior' inputName='distribution'/>
            <connect spec='BeautiConnector' srcID='RateCTPrior.$(n)' targetID='prior' inputName='distribution'/>
            <connect spec='BeautiConnector' srcID='RateGTPrior.$(n)' targetID='prior' inputName='distribution'/>
        </subtemplate>


<!-- empirical amino acid substitution models -->
        <subtemplate id='Blosum62' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.Blosum62' mainid='Blosum62.$(n)'><!--value spec='XML'--><![CDATA[<plugin spec='Blosum62' id='Blosum62.$(n)'/>]]></subtemplate>
        <subtemplate id='Dayhoff' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.Dayhoff' mainid='Dayhoff.$(n)'><!--value spec='XML'--><![CDATA[<plugin spec='Dayhoff' id='Dayhoff.$(n)'/>]]></subtemplate>
        <subtemplate id='JTT' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.JTT' mainid='JTT.$(n)'><!--value spec='XML'--><![CDATA[<plugin spec='JTT' id='JTT.$(n)'/>]]></subtemplate>
        <subtemplate id='cpREV' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.CPREV' mainid='CPREV.$(n)'><!--value spec='XML'--><![CDATA[<plugin spec='CPREV' id='CPREV.$(n)'/>]]></subtemplate>
        <subtemplate id='mtREV' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.MTREV' mainid='MTREV.$(n)'><!--value spec='XML'--><![CDATA[<plugin spec='MTREV' id='MTREV.$(n)'/>]]></subtemplate>
        <subtemplate id='WAG' spec='BeautiSubTemplate' class='beast.evolution.substitutionmodel.WAG' mainid='WAG.$(n)'><!--value spec='XML'--><![CDATA[<plugin spec='WAG' id='WAG.$(n)'/>]]></subtemplate>





<!-- Clock models -->

<!-- Strickt clock -->
        <subtemplate id='StrictClock' spec='BeautiSubTemplate' class='beast.evolution.branchratemodel.StrictClockModel' mainid='StrictClock.$(n)'>
<![CDATA[
                <branchRateModel spec='StrictClockModel' id='StrictClock.$(n)'>
                    <clock.rate id='clockRate.$(n)' spec='parameter.RealParameter' value='1.0' estimate='false'/>
                </branchRateModel>
]]>
        </subtemplate>

<!-- Relaxed clock -->
        <subtemplate id='RelaxedClock' spec='BeautiSubTemplate' class='beast.evolution.branchratemodel.UCRelaxedClockModel' mainid='RelaxedClock.$(n)'>
<![CDATA[
        <plugin spec='UCRelaxedClockModel' id="RelaxedClock.$(n)" tree='@Tree.$(n)'>
            <distr id='UCRClognormal.$(n)' name='distr' spec="beast.math.distributions.LogNormalDistributionModel">
                <parameter name='M' id='ucldMean.$(n)' value="1" estimate='true'/>
                <parameter name='S' id='ucldStdev.$(n)' value="0.5" lower="0" upper="5" estimate='true'/>
            </distr>
            <rateCategories spec='parameter.IntegerParameter' id='rateCategories.$(n)' value="1"/>
        </plugin>

        <operator id="CategoriesRandomWalk.$(n)" spec="IntUniformOperator" weight="1" parameter="@rateCategories.$(n)"/>
        <operator id='ucldMeanScaler.$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.5" weight="1" parameter="@ucldMean.$(n)"/>
        <operator id='ucldStdevScaler.$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.5" weight="1" parameter="@ucldStdev.$(n)"/>

]]>
            <connect spec='BeautiConnector' srcID='CategoriesRandomWalk.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='ucldMeanScaler.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='ucldStdevScaler.$(n)' targetID='mcmc' inputName='operator'/>

            <connect spec='BeautiConnector' srcID='ucldMean.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='ucldStdev.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='rateCategories.$(n)' targetID='tracelog' inputName='log'/>
        </subtemplate>

<!-- Random local clock -->
        <subtemplate id='RandomLocalClock' spec='BeautiSubTemplate' class='beast.evolution.branchratemodel.RandomLocalClockModel' mainid='RandomLocalClock.$(n)'>
<![CDATA[
        <input spec='RandomLocalClockModel' id="RandomLocalClock.$(n)" ratesAreMultipliers="false" tree='@Tree.$(n)'>
            <parameter spec='parameter.BooleanParameter' name='indicators' id='Indicators.$(n)' value="1"/>
            <parameter name='rates' id='clockrates.$(n)' value="1"/>
        </input>

        <operator id="IndicatorsBitFlip.$(n)" spec="BitFlipOperator" weight="1" parameter="@Indicators.$(n)"/>
        <operator id='ClockRateScaler.$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.5" weight="1" parameter="@clockrates.$(n)"/>

]]>
            <connect spec='BeautiConnector' srcID='IndicatorsBitFlip.$(n)' targetID='mcmc' inputName='operator'/>
            <connect spec='BeautiConnector' srcID='ClockRateScaler.$(n)' targetID='mcmc' inputName='operator'/>

            <connect spec='BeautiConnector' srcID='Indicators.$(n)' targetID='tracelog' inputName='log'/>
            <connect spec='BeautiConnector' srcID='clockrates.$(n)' targetID='tracelog' inputName='log'/>
        </subtemplate>


<!-- tree priors -->
<!-- Yule -->
        <subtemplate id='YuleModel' spec='BeautiSubTemplate' class='beast.evolution.speciation.YuleModel' mainid='YuleModel.$(n)'>
<![CDATA[
            <plugin spec='YuleModel' id="YuleModel.$(n)" tree='@Tree.$(n)'>
                <parameter name='birthDiffRate' id="birthRate.$(n)" value='1.0'/>
            </plugin>
]]>
        </subtemplate>

<!-- Coalescent for Constant population -->
        <subtemplate id='CoalescentConstantPopulation' spec='BeautiSubTemplate' class='beast.evolution.tree.coalescent.Coalescent' mainid='CoalescentConstant.$(n)'>
<![CDATA[
            <distribution id="CoalescentConstant.$(n)" spec="Coalescent">
                <treeIntervals spec='TreeIntervals' id='TreeIntervals.$(n)'>
                     <tree idref="Tree.$(n)"/>
                </treeIntervals>
                <populationModel spec="ConstantPopulation" id='ConstantPopulation.$(n)'>
                     <parameter name="popSize" id="cPopSize.$(n)" value='1.0' estimate='false'/>
                 </populationModel>
            </distribution>
]]>
        </subtemplate>


<!-- Coalescent for Exponential population -->
        <subtemplate id='CoalescentExponentialPopulation' spec='BeautiSubTemplate' class='beast.evolution.tree.coalescent.Coalescent' mainid='CoalescentExponential.$(n)'>
<![CDATA[
            <distribution id="CoalescentExponential.$(n)" spec="Coalescent">
                <treeIntervals spec='TreeIntervals' id='TreeIntervals.$(n)'>
                     <tree idref="Tree.$(n)"/>
                </treeIntervals>
                <populationModel spec="ExponentialGrowth" id="ExponentialGrowth.$(n)">
                    <parameter name="popSize" id="ePopSize.$(n)" value='1.0' estimate='false'/>
                    <parameter name="growthRate" id="growthRate.$(n)" value='1.0' estimate='false'/>
                </populationModel>
            </distribution>
]]>
        </subtemplate>

<!-- Parametric distributions, all without hyperpriors -->

<!-- Uniform -->
        <subtemplate id='Uniform' spec='BeautiSubTemplate' class='beast.math.distributions.Uniform' mainid='[top]'>
<![CDATA[
        <distr spec="beast.math.distributions.Uniform" lower='0' upper='Infinity'/>
]]>
        </subtemplate>

<!-- Normal -->
        <subtemplate id='Normal' spec='BeautiSubTemplate' class='beast.math.distributions.Normal' mainid='[top]'>
<![CDATA[
    <distr offset="0.0" spec="beast.math.distributions.Normal">
        <parameter name='mean' value='0' estimate='false'/>
        <parameter name='sigma' value='1' estimate='false'/>
    </distr>
]]>
        </subtemplate>

<!-- OneOnX -->
        <subtemplate id='OneOnX' spec='BeautiSubTemplate' class='beast.math.distributions.OneOnX' mainid='[top]'>
<![CDATA[
        <distr spec="beast.math.distributions.OneOnX"/>
]]>
        </subtemplate>

<!-- lognormal -->
        <subtemplate id='LogNormalDistributionModel' spec='BeautiSubTemplate' class='beast.math.distributions.OneOnX' mainid='[top]'>
<![CDATA[
        <distr name='distr' spec="beast.math.distributions.LogNormalDistributionModel">
            <parameter name='M' value="1" estimate='false'/>
            <parameter name='S' value="0.5" lower="0" upper="5" estimate='false'/>
        </distr>
]]>
        </subtemplate>

<!-- Exponential -->
        <subtemplate id='Exponential' spec='BeautiSubTemplate' class='beast.math.distributions.Exponential' mainid='[top]'>
<![CDATA[
        <distr offset="0.0" spec="beast.math.distributions.Exponential">
            <parameter name='lambda' value="1" estimate='false'/>
        </distr>
]]>
        </subtemplate>

<!-- Gamma -->
        <subtemplate id='Gamma' spec='BeautiSubTemplate' class='beast.math.distributions.Gamma' mainid='[top]'>
<![CDATA[
        <distr offset="0.0" spec="beast.math.distributions.Gamma">
            <parameter name='alpha' value="2" estimate='false'/>
            <parameter name='beta' value="2" estimate='false'/>
        </distr>
]]>
        </subtemplate>

<!-- Laplace -->
<!-- TODO: IMPLEMENT beast.math.distributions.LaplaceDistribution.getDistribution() before uncommenting this
        <subtemplate id='LaplaceDistribution' spec='BeautiSubTemplate' class='beast.math.distributions.LaplaceDistribution' mainid='[top]'>
<![CDATA[
        <distr offset="0.0" spec="beast.math.distributions.LaplaceDistribution">
            <parameter name='mu' value="0" estimate='false'/>
            <parameter name='scale' value="1" estimate='false'/>
        </distr>
]]>
        </subtemplate>
-->

<!-- InverseGamma -->
        <subtemplate id='InverseGamma' spec='BeautiSubTemplate' class='beast.math.distributions.InverseGamma' mainid='[top]'>
<![CDATA[
        <distr offset="0.0" spec="beast.math.distributions.LaplaceDistribution">
            <parameter name='alpha' value="2" estimate='false'/>
            <parameter name='beta' value="2" estimate='false'/>
        </distr>
]]>
        </subtemplate>

</mergewith>

</beast>
